<stylecopresultscache>
  <version>12</version>
  <project key="-1333870136">
    <configuration>DEBUG;TRACE;UNITY_5_3_OR_NEWER;UNITY_5_4_OR_NEWER;UNITY_5_5_OR_NEWER;UNITY_5_6_OR_NEWER;UNITY_2017_1_OR_NEWER;UNITY_2017_2_OR_NEWER;UNITY_2017_3_OR_NEWER;UNITY_2017_4_OR_NEWER;UNITY_2018_1_OR_NEWER;UNITY_2018_2_OR_NEWER;UNITY_2018_3_OR_NEWER;UNITY_2018_3_0;UNITY_2018_3;UNITY_2018;UNITY_INCLUDE_TESTS;ENABLE_AUDIO;ENABLE_CACHING;ENABLE_CLOTH;ENABLE_MICROPHONE;ENABLE_MULTIPLE_DISPLAYS;ENABLE_PHYSICS;ENABLE_SPRITES;ENABLE_GRID;ENABLE_TILEMAP;ENABLE_TERRAIN;ENABLE_TEXTURE_STREAMING;ENABLE_DIRECTOR;ENABLE_UNET;ENABLE_LZMA;ENABLE_UNITYEVENTS;ENABLE_WEBCAM;ENABLE_WWW;ENABLE_CLOUD_SERVICES_COLLAB;ENABLE_CLOUD_SERVICES_COLLAB_SOFTLOCKS;ENABLE_CLOUD_SERVICES_ADS;ENABLE_CLOUD_HUB;ENABLE_CLOUD_PROJECT_ID;ENABLE_CLOUD_SERVICES_USE_WEBREQUEST;ENABLE_CLOUD_SERVICES_UNET;ENABLE_CLOUD_SERVICES_BUILD;ENABLE_CLOUD_LICENSE;ENABLE_EDITOR_HUB;ENABLE_EDITOR_HUB_LICENSE;ENABLE_WEBSOCKET_CLIENT;ENABLE_DIRECTOR_AUDIO;ENABLE_DIRECTOR_TEXTURE;ENABLE_TIMELINE;ENABLE_EDITOR_METRICS;ENABLE_EDITOR_METRICS_CACHING;ENABLE_MANAGED_JOBS;ENABLE_MANAGED_TRANSFORM_JOBS;ENABLE_MANAGED_ANIMATION_JOBS;INCLUDE_DYNAMIC_GI;INCLUDE_GI;ENABLE_MONO_BDWGC;PLATFORM_SUPPORTS_MONO;INCLUDE_PUBNUB;ENABLE_VIDEO;ENABLE_CUSTOM_RENDER_TEXTURE;ENABLE_LOCALIZATION;PLATFORM_ANDROID;UNITY_ANDROID;UNITY_ANDROID_API;ENABLE_SUBSTANCE;ENABLE_EGL;ENABLE_NETWORK;ENABLE_RUNTIME_GI;ENABLE_CRUNCH_TEXTURE_COMPRESSION;ENABLE_UNITYWEBREQUEST;ENABLE_CLOUD_SERVICES;ENABLE_CLOUD_SERVICES_ANALYTICS;ENABLE_EVENT_QUEUE;ENABLE_CLOUD_SERVICES_PURCHASING;ENABLE_CLOUD_SERVICES_CRASH_REPORTING;ENABLE_CLOUD_SERVICES_NATIVE_CRASH_REPORTING;PLATFORM_SUPPORTS_ADS_ID;UNITY_CAN_SHOW_SPLASH_SCREEN;ENABLE_VR;ENABLE_AR;UNITY_HAS_GOOGLEVR;UNITY_HAS_TANGO;ENABLE_SPATIALTRACKING;ENABLE_RUNTIME_PERMISSIONS;UNITY_ASTC_ONLY_DECOMPRESS;ENABLE_UNITYADS_RUNTIME;UNITY_UNITYADS_API;ENABLE_MONO;NET_2_0_SUBSET;NET_LEGACY;ENABLE_PROFILER;UNITY_ASSERTIONS;UNITY_EDITOR;UNITY_EDITOR_64;UNITY_EDITOR_WIN;ENABLE_UNITY_COLLECTIONS_CHECKS;ENABLE_BURST_AOT;UNITY_TEAM_LICENSE;ENABLE_VSTU;VUFORIA_ANDROID_SETTINGS</configuration>
  </project>
  <sourcecode name="MenuBarSceneLoader.cs" parser="StyleCop.CSharp.CsParser">
    <timestamps>
      <styleCop>2019/04/02 14:14:33.135</styleCop>
      <settingsFile>2019/04/02 14:14:33.109</settingsFile>
      <sourceFile>2019/04/10 10:54:26.168</sourceFile>
      <parser>2019/04/02 14:14:33.135</parser>
      <StyleCop.CSharp.DocumentationRules>2019/04/02 14:14:33.135</StyleCop.CSharp.DocumentationRules>
      <StyleCop.CSharp.DocumentationRules.FilesHashCode>1547946230</StyleCop.CSharp.DocumentationRules.FilesHashCode>
      <StyleCop.CSharp.LayoutRules>2019/04/02 14:14:33.135</StyleCop.CSharp.LayoutRules>
      <StyleCop.CSharp.LayoutRules.FilesHashCode>0</StyleCop.CSharp.LayoutRules.FilesHashCode>
      <StyleCop.CSharp.MaintainabilityRules>2019/04/02 14:14:33.135</StyleCop.CSharp.MaintainabilityRules>
      <StyleCop.CSharp.MaintainabilityRules.FilesHashCode>0</StyleCop.CSharp.MaintainabilityRules.FilesHashCode>
      <StyleCop.CSharp.NamingRules>2019/04/02 14:14:33.135</StyleCop.CSharp.NamingRules>
      <StyleCop.CSharp.NamingRules.FilesHashCode>0</StyleCop.CSharp.NamingRules.FilesHashCode>
      <StyleCop.CSharp.OrderingRules>2019/04/02 14:14:33.135</StyleCop.CSharp.OrderingRules>
      <StyleCop.CSharp.OrderingRules.FilesHashCode>0</StyleCop.CSharp.OrderingRules.FilesHashCode>
      <StyleCop.CSharp.ReadabilityRules>2019/04/02 14:14:33.135</StyleCop.CSharp.ReadabilityRules>
      <StyleCop.CSharp.ReadabilityRules.FilesHashCode>0</StyleCop.CSharp.ReadabilityRules.FilesHashCode>
      <StyleCop.CSharp.SpacingRules>2019/04/02 14:14:33.135</StyleCop.CSharp.SpacingRules>
      <StyleCop.CSharp.SpacingRules.FilesHashCode>0</StyleCop.CSharp.SpacingRules.FilesHashCode>
    </timestamps>
    <violations>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="FileMustHaveHeader" ruleCheckId="SA1633">
        <context>The file has no header, the header Xml is invalid, or the header is not located at the top of the file.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>1</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="SystemUsingDirectivesMustBePlacedBeforeOtherUsingDirectives" ruleCheckId="SA1208">
        <context>System using directives must be placed before all other using directives.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="UsingDirectivesMustBeOrderedAlphabeticallyByNamespace" ruleCheckId="SA1210">
        <context>Using directives must be sorted alphabetically by the namespaces.</context>
        <line>3</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>6</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CodeMustNotContainMultipleBlankLinesInARow" ruleCheckId="SA1507">
        <context>The code must not contain multiple blank lines in a row.</context>
        <line>83</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>19</line>
        <index>541</index>
        <endIndex>586</endIndex>
        <startLine>19</startLine>
        <startColumn>44</startColumn>
        <endLine>19</endLine>
        <endColumn>89</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>29</line>
        <index>1028</index>
        <endIndex>1082</endIndex>
        <startLine>29</startLine>
        <startColumn>44</startColumn>
        <endLine>29</endLine>
        <endColumn>98</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>48</line>
        <index>1599</index>
        <endIndex>1613</endIndex>
        <startLine>48</startLine>
        <startColumn>5</startColumn>
        <endLine>48</endLine>
        <endColumn>19</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The property must have a documentation header.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketMustBeFollowedByBlankLine" ruleCheckId="SA1513">
        <context>Statements or elements wrapped in curly brackets must be followed by a blank line.</context>
        <line>16</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="ElementMustBeginWithUpperCaseLetter" ruleCheckId="SA1300">
        <context>property names begin with an upper-case letter: instance.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustAppearInTheCorrectOrder" ruleCheckId="SA1201">
        <context>All properties must be placed after all fields.</context>
        <line>8</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>13</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ElementsMustBeSeparatedByBlankLine" ruleCheckId="SA1516">
        <context>Adjacent elements must be separated by a blank line.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>17</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all internal fields.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>28</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private fields must be placed after all public fields.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: menuBarLoading.</context>
        <line>18</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>19</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: buttonsUIParent.</context>
        <line>20</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: arrowTransitionTime.</context>
        <line>21</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: pendingColorBlinkDuration.</context>
        <line>22</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: activeButtonColor.</context>
        <line>23</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: inactiveButtonColor.</context>
        <line>24</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: pendingButtonColor.</context>
        <line>25</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: errorButtonColor.</context>
        <line>26</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: currentPendingButton.</context>
        <line>27</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>28</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>28</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: easeType.</context>
        <line>28</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FieldsMustBePrivate" ruleCheckId="SA1401">
        <context>Fields must be declared with private access. Use properties to expose fields.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="AccessibleFieldsMustBeginWithUpperCaseLetter" ruleCheckId="SA1307">
        <context>Public and internal fields must start with an upper-case letter: currentActiveButton.</context>
        <line>29</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>31</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>131</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>149</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>165</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>216</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>36</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SceneLoadManagement_loadingScene must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>38</line>
        <index>1236</index>
        <endIndex>1267</endIndex>
        <startLine>38</startLine>
        <startColumn>45</startColumn>
        <endLine>38</endLine>
        <endColumn>76</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SceneLoadManagement_loadingSceneFinished must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>39</line>
        <index>1323</index>
        <endIndex>1362</endIndex>
        <startLine>39</startLine>
        <startColumn>53</startColumn>
        <endLine>39</endLine>
        <endColumn>92</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>42</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SceneLoadManagement_loadingScene must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>44</line>
        <index>1456</index>
        <endIndex>1487</endIndex>
        <startLine>44</startLine>
        <startColumn>45</startColumn>
        <endLine>44</endLine>
        <endColumn>76</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SceneLoadManagement_loadingSceneFinished must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>45</line>
        <index>1543</index>
        <endIndex>1582</endIndex>
        <startLine>45</startLine>
        <startColumn>53</startColumn>
        <endLine>45</endLine>
        <endColumn>92</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>49</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketsMustNotBePrecededByBlankLine" ruleCheckId="SA1508">
        <context>A closing curly bracket must not be preceded by a blank line.</context>
        <line>66</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustBeginWithLowerCaseLetter" ruleCheckId="SA1306">
        <context>Variable names and private field names must start with a lower-case letter: Button.</context>
        <line>55</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to menuBarLoading must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>54</line>
        <index>1931</index>
        <endIndex>1944</endIndex>
        <startLine>54</startLine>
        <startColumn>13</startColumn>
        <endLine>54</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>60</line>
        <index>2207</index>
        <endIndex>2221</endIndex>
        <startLine>60</startLine>
        <startColumn>30</startColumn>
        <endLine>60</endLine>
        <endColumn>44</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to SetActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>61</line>
        <index>2268</index>
        <endIndex>2282</endIndex>
        <startLine>61</startLine>
        <startColumn>21</startColumn>
        <endLine>61</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>58</line>
        <index>2098</index>
        <endIndex>2112</endIndex>
        <startLine>58</startLine>
        <startColumn>21</startColumn>
        <endLine>58</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>56</line>
        <index>2019</index>
        <endIndex>2033</endIndex>
        <startLine>56</startLine>
        <startColumn>33</startColumn>
        <endLine>56</endLine>
        <endColumn>47</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>51</line>
        <index>1702</index>
        <endIndex>1791</endIndex>
        <startLine>51</startLine>
        <startColumn>9</startColumn>
        <endLine>51</endLine>
        <endColumn>98</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'if' is invalid.</context>
        <line>52</line>
        <index>1802</index>
        <endIndex>1803</endIndex>
        <startLine>52</startLine>
        <startColumn>9</startColumn>
        <endLine>52</endLine>
        <endColumn>10</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>69</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to menuBarLoading must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>71</line>
        <index>2484</index>
        <endIndex>2497</endIndex>
        <startLine>71</startLine>
        <startColumn>9</startColumn>
        <endLine>71</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustBeginWithLowerCaseLetter" ruleCheckId="SA1306">
        <context>Variable names and private field names must start with a lower-case letter: Button.</context>
        <line>74</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StartCoroutine must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>79</line>
        <index>2733</index>
        <endIndex>2746</endIndex>
        <startLine>79</startLine>
        <startColumn>13</startColumn>
        <endLine>79</endLine>
        <endColumn>26</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to menuBarLoading must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>77</line>
        <index>2693</index>
        <endIndex>2706</endIndex>
        <startLine>77</startLine>
        <startColumn>14</startColumn>
        <endLine>77</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>84</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="ClosingCurlyBracketMustBeFollowedByBlankLine" ruleCheckId="SA1513">
        <context>Statements or elements wrapped in curly brackets must be followed by a blank line.</context>
        <line>94</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>84</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustBeginWithLowerCaseLetter" ruleCheckId="SA1306">
        <context>Variable names and private field names must start with a lower-case letter: SceneObjects.</context>
        <line>86</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="UseStringEmptyForEmptyStrings" ruleCheckId="SA1122">
        <context>Use string.Empty rather than "".</context>
        <line>91</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the param tag contains incorrectly spelled words: 'Vuphoria'</context>
        <line>102</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>114</line>
        <index>4293</index>
        <endIndex>4312</endIndex>
        <startLine>114</startLine>
        <startColumn>21</startColumn>
        <endLine>114</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>115</line>
        <index>4379</index>
        <endIndex>4398</endIndex>
        <startLine>115</startLine>
        <startColumn>21</startColumn>
        <endLine>115</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pendingButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>115</line>
        <index>4421</index>
        <endIndex>4438</endIndex>
        <startLine>115</startLine>
        <startColumn>63</startColumn>
        <endLine>115</endLine>
        <endColumn>80</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inactiveButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>115</line>
        <index>4441</index>
        <endIndex>4459</endIndex>
        <startLine>115</startLine>
        <startColumn>83</startColumn>
        <endLine>115</endLine>
        <endColumn>101</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pendingColorBlinkDuration must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>115</line>
        <index>4462</index>
        <endIndex>4486</endIndex>
        <startLine>115</startLine>
        <startColumn>104</startColumn>
        <endLine>115</endLine>
        <endColumn>128</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>108</line>
        <index>4020</index>
        <endIndex>4034</endIndex>
        <startLine>108</startLine>
        <startColumn>41</startColumn>
        <endLine>108</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>105</line>
        <index>3882</index>
        <endIndex>3901</endIndex>
        <startLine>105</startLine>
        <startColumn>13</startColumn>
        <endLine>105</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>122</line>
        <index>4650</index>
        <endIndex>4669</endIndex>
        <startLine>122</startLine>
        <startColumn>62</startColumn>
        <endLine>122</endLine>
        <endColumn>81</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>123</line>
        <index>4702</index>
        <endIndex>4721</endIndex>
        <startLine>123</startLine>
        <startColumn>13</startColumn>
        <endLine>123</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pendingButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>123</line>
        <index>4744</index>
        <endIndex>4761</endIndex>
        <startLine>123</startLine>
        <startColumn>55</startColumn>
        <endLine>123</endLine>
        <endColumn>72</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inactiveButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>123</line>
        <index>4764</index>
        <endIndex>4782</endIndex>
        <startLine>123</startLine>
        <startColumn>75</startColumn>
        <endLine>123</endLine>
        <endColumn>93</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to pendingColorBlinkDuration must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>123</line>
        <index>4785</index>
        <endIndex>4809</endIndex>
        <startLine>123</startLine>
        <startColumn>96</startColumn>
        <endLine>123</endLine>
        <endColumn>120</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementDocumentationMustBeSpelledCorrectly" ruleCheckId="SA1650">
        <context>The documentation text within the param tag contains incorrectly spelled words: 'Vuphoria'</context>
        <line>131</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the foreach statement must be wrapped in opening and closing curly brackets.</context>
        <line>136</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>138</line>
        <index>5332</index>
        <endIndex>5351</endIndex>
        <startLine>138</startLine>
        <startColumn>21</startColumn>
        <endLine>138</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>139</line>
        <index>5418</index>
        <endIndex>5437</endIndex>
        <startLine>139</startLine>
        <startColumn>21</startColumn>
        <endLine>139</endLine>
        <endColumn>40</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to errorButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>139</line>
        <index>5451</index>
        <endIndex>5466</endIndex>
        <startLine>139</startLine>
        <startColumn>54</startColumn>
        <endLine>139</endLine>
        <endColumn>69</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>135</line>
        <index>5221</index>
        <endIndex>5235</endIndex>
        <startLine>135</startLine>
        <startColumn>41</startColumn>
        <endLine>135</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>133</line>
        <index>5139</index>
        <endIndex>5158</endIndex>
        <startLine>133</startLine>
        <startColumn>13</startColumn>
        <endLine>133</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>145</line>
        <index>5566</index>
        <endIndex>5585</endIndex>
        <startLine>145</startLine>
        <startColumn>13</startColumn>
        <endLine>145</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to errorButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>145</line>
        <index>5599</index>
        <endIndex>5614</endIndex>
        <startLine>145</startLine>
        <startColumn>46</startColumn>
        <endLine>145</endLine>
        <endColumn>61</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>149</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>152</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>152</line>
        <index>5734</index>
        <endIndex>5753</endIndex>
        <startLine>152</startLine>
        <startColumn>13</startColumn>
        <endLine>152</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>151</line>
        <index>5699</index>
        <endIndex>5718</endIndex>
        <startLine>151</startLine>
        <startColumn>13</startColumn>
        <endLine>151</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>153</line>
        <index>5790</index>
        <endIndex>5809</endIndex>
        <startLine>153</startLine>
        <startColumn>9</startColumn>
        <endLine>153</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to activeButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>153</line>
        <index>5823</index>
        <endIndex>5839</endIndex>
        <startLine>153</startLine>
        <startColumn>42</startColumn>
        <endLine>153</endLine>
        <endColumn>58</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to StartCoroutine must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>154</line>
        <index>5852</index>
        <endIndex>5865</endIndex>
        <startLine>154</startLine>
        <startColumn>9</startColumn>
        <endLine>154</endLine>
        <endColumn>22</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TurnCheckTurnOffPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>154</line>
        <index>5867</index>
        <endIndex>5895</endIndex>
        <startLine>154</startLine>
        <startColumn>24</startColumn>
        <endLine>154</endLine>
        <endColumn>52</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>157</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>161</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>157</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ToggleButtonStatusIndicator must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>161</line>
        <index>6082</index>
        <endIndex>6108</endIndex>
        <startLine>161</startLine>
        <startColumn>13</startColumn>
        <endLine>161</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>161</line>
        <index>6110</index>
        <endIndex>6129</endIndex>
        <startLine>161</startLine>
        <startColumn>41</startColumn>
        <endLine>161</endLine>
        <endColumn>60</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>160</line>
        <index>6024</index>
        <endIndex>6043</endIndex>
        <startLine>160</startLine>
        <startColumn>13</startColumn>
        <endLine>160</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>160</line>
        <index>6048</index>
        <endIndex>6066</endIndex>
        <startLine>160</startLine>
        <startColumn>37</startColumn>
        <endLine>160</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentPendingButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>162</line>
        <index>6160</index>
        <endIndex>6179</endIndex>
        <startLine>162</startLine>
        <startColumn>9</startColumn>
        <endLine>162</endLine>
        <endColumn>28</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>165</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to TransitionArrowToButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>169</line>
        <index>6457</index>
        <endIndex>6479</endIndex>
        <startLine>169</startLine>
        <startColumn>9</startColumn>
        <endLine>169</endLine>
        <endColumn>31</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ToggleAllButtonsStatusIndicator must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>170</line>
        <index>6509</index>
        <endIndex>6539</endIndex>
        <startLine>170</startLine>
        <startColumn>9</startColumn>
        <endLine>170</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>171</line>
        <index>6558</index>
        <endIndex>6576</endIndex>
        <startLine>171</startLine>
        <startColumn>9</startColumn>
        <endLine>171</endLine>
        <endColumn>27</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ToggleButtonStatusIndicator must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>172</line>
        <index>6607</index>
        <endIndex>6633</endIndex>
        <startLine>172</startLine>
        <startColumn>9</startColumn>
        <endLine>172</endLine>
        <endColumn>35</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>172</line>
        <index>6635</index>
        <endIndex>6653</endIndex>
        <startLine>172</startLine>
        <startColumn>37</startColumn>
        <endLine>172</endLine>
        <endColumn>55</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>167</line>
        <index>6276</index>
        <endIndex>6400</endIndex>
        <startLine>167</startLine>
        <startColumn>9</startColumn>
        <endLine>167</endLine>
        <endColumn>133</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>175</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>182</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the else statement must be wrapped in opening and closing curly brackets.</context>
        <line>184</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The method must have an access modifier.</context>
        <line>175</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>182</line>
        <index>6935</index>
        <endIndex>6953</endIndex>
        <startLine>182</startLine>
        <startColumn>21</startColumn>
        <endLine>182</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to activeButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>182</line>
        <index>7022</index>
        <endIndex>7038</endIndex>
        <startLine>182</startLine>
        <startColumn>108</startColumn>
        <endLine>182</endLine>
        <endColumn>124</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to currentActiveButton must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>184</line>
        <index>7084</index>
        <endIndex>7102</endIndex>
        <startLine>184</startLine>
        <startColumn>21</startColumn>
        <endLine>184</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inactiveButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>184</line>
        <index>7171</index>
        <endIndex>7189</endIndex>
        <startLine>184</startLine>
        <startColumn>108</startColumn>
        <endLine>184</endLine>
        <endColumn>126</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to buttonsUIParent must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>177</line>
        <index>6769</index>
        <endIndex>6783</endIndex>
        <startLine>177</startLine>
        <startColumn>36</startColumn>
        <endLine>177</endLine>
        <endColumn>50</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="KeywordsMustBeSpacedCorrectly" ruleCheckId="SA1000">
        <context>The spacing around the keyword 'foreach' is invalid.</context>
        <line>177</line>
        <index>6742</index>
        <endIndex>6748</endIndex>
        <startLine>177</startLine>
        <startColumn>9</startColumn>
        <endLine>177</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>189</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>194</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the else statement must be wrapped in opening and closing curly brackets.</context>
        <line>196</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to activeButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>194</line>
        <index>7547</index>
        <endIndex>7563</endIndex>
        <startLine>194</startLine>
        <startColumn>104</startColumn>
        <endLine>194</endLine>
        <endColumn>120</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to inactiveButtonColor must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>196</line>
        <index>7688</index>
        <endIndex>7706</endIndex>
        <startLine>196</startLine>
        <startColumn>104</startColumn>
        <endLine>196</endLine>
        <endColumn>122</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>200</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustBeginWithLowerCaseLetter" ruleCheckId="SA1306">
        <context>Variable names and private field names must start with a lower-case letter: ValueToArguments.</context>
        <line>204</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ClosingParenthesisMustBeOnLineOfLastParameter" ruleCheckId="SA1111">
        <context>The closing parenthesis or bracket must be placed on the same line as the last parameter in the parameter list.</context>
        <line>211</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParametersMustBeOnSameLineOrSeparateLines" ruleCheckId="SA1117">
        <context>All method parameters must be placed on the same line, or each parameter must be placed on a separate line.</context>
        <line>204</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>205</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>206</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>207</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>208</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>209</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="ParameterMustFollowComma" ruleCheckId="SA1115">
        <context>The parameter must begin on the line after the previous parameter.</context>
        <line>210</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ArrowMovementBar must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>205</line>
        <index>7972</index>
        <endIndex>7987</endIndex>
        <startLine>205</startLine>
        <startColumn>21</startColumn>
        <endLine>205</endLine>
        <endColumn>36</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to arrowTransitionTime must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>207</line>
        <index>8057</index>
        <endIndex>8075</endIndex>
        <startLine>207</startLine>
        <startColumn>21</startColumn>
        <endLine>207</endLine>
        <endColumn>39</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to easeType must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>208</line>
        <index>8103</index>
        <endIndex>8110</endIndex>
        <startLine>208</startLine>
        <startColumn>25</startColumn>
        <endLine>208</endLine>
        <endColumn>32</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to gameObject must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>212</line>
        <index>8240</index>
        <endIndex>8249</endIndex>
        <startLine>212</startLine>
        <startColumn>24</startColumn>
        <endLine>212</endLine>
        <endColumn>33</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="ClosingParenthesisMustBeSpacedCorrectly" ruleCheckId="SA1009">
        <context>Invalid spacing around the closing parenthesis.</context>
        <line>211</line>
        <index>8201</index>
        <endIndex>8212</endIndex>
        <startLine>211</startLine>
        <startColumn>1</startColumn>
        <endLine>211</endLine>
        <endColumn>12</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>216</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ArrowMovementBar must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>218</line>
        <index>8381</index>
        <endIndex>8396</endIndex>
        <startLine>218</startLine>
        <startColumn>9</startColumn>
        <endLine>218</endLine>
        <endColumn>24</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to ArrowMovementBar must begin with the 'this.', 'base.', 'object.' or 'MenuBarStateManager.' or 'SceneLoadPass.' prefix to indicate the intended method call. </context>
        <line>218</line>
        <index>8439</index>
        <endIndex>8454</endIndex>
        <startLine>218</startLine>
        <startColumn>67</startColumn>
        <endLine>218</endLine>
        <endColumn>82</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>221</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the for statement must be wrapped in opening and closing curly brackets.</context>
        <line>224</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="CurlyBracketsMustNotBeOmitted" ruleCheckId="SA1503">
        <context>The body of the if statement must be wrapped in opening and closing curly brackets.</context>
        <line>225</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The class must have a documentation header.</context>
        <line>232</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="FileMayOnlyContainASingleClass" ruleCheckId="SA1402">
        <context>A C# document may only contain a single class at the root level unless all of the classes are partial and are of the same type.</context>
        <line>232</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SymbolsMustBeSpacedCorrectly" ruleCheckId="SA1003">
        <context>The spacing around the symbol ':' is invalid.</context>
        <line>232</line>
        <index>8825</index>
        <endIndex>8825</endIndex>
        <startLine>232</startLine>
        <startColumn>38</startColumn>
        <endLine>232</endLine>
        <endColumn>38</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SymbolsMustBeSpacedCorrectly" ruleCheckId="SA1003">
        <context>The spacing around the symbol ':' is invalid.</context>
        <line>232</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The field must have a documentation header.</context>
        <line>234</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.MaintainabilityRules" rule="AccessModifierMustBeDeclared" ruleCheckId="SA1400">
        <context>The field must have an access modifier.</context>
        <line>234</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.NamingRules" rule="FieldNamesMustNotBeginWithUnderscore" ruleCheckId="SA1309">
        <context>Field names must not start with an underscore.</context>
        <line>234</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>236</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.OrderingRules" rule="ElementsMustBeOrderedByAccess" ruleCheckId="SA1202">
        <context>All private methods must be placed after all public methods.</context>
        <line>241</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.ReadabilityRules" rule="PrefixCallsCorrectly" ruleCheckId="SA1126">
        <context>The call to _target must begin with the 'this.', 'base.', 'object.' or 'MenuBarSceneLoaderEditor.' or 'Editor.' prefix to indicate the intended method call. </context>
        <line>238</line>
        <index>8917</index>
        <endIndex>8923</endIndex>
        <startLine>238</startLine>
        <startColumn>9</startColumn>
        <endLine>238</endLine>
        <endColumn>15</endColumn>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.DocumentationRules" rule="ElementsMustBeDocumented" ruleCheckId="SA1600">
        <context>The method must have a documentation header.</context>
        <line>241</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.LayoutRules" rule="SingleLineCommentMustBePrecededByBlankLine" ruleCheckId="SA1515">
        <context>A single-line comment must be preceded by a blank line or another single-line comment, or must be the first item in its scope. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>244</line>
        <warning>False</warning>
      </violation>
      <violation namespace="StyleCop.CSharp.SpacingRules" rule="SingleLineCommentsMustBeginWithSingleSpace" ruleCheckId="SA1005">
        <context>The comment must start with a single space. To ignore this error when commenting out a line of code, begin the comment with '////' rather than '//'.</context>
        <line>244</line>
        <index>9056</index>
        <endIndex>9097</endIndex>
        <startLine>244</startLine>
        <startColumn>9</startColumn>
        <endLine>244</endLine>
        <endColumn>50</endColumn>
        <warning>False</warning>
      </violation>
    </violations>
  </sourcecode>
</stylecopresultscache>